---
import { Picture } from "astro:assets";

interface Props {
    slug: string;
    date?: Date;
}

const { slug, date } = Astro.props;

let post = null;
let cover = null;

try {
    post = await import(`../articles/${slug}.astro`);

    const coverType: "png" | "jpg" | "jpeg" | "webp" | "avif" = post.cover.split(".").at(-1);
    const coverName: string = post.cover.split(".").at(0);

    switch (coverType) {
        case "png":
            cover = await import(`../assets/article-cover/${coverName}.png`);
            break;
        case "jpg":
            cover = await import(`../assets/article-cover/${coverName}.jpg`);
            break;
        case "jpeg":
            cover = await import(`../assets/article-cover/${coverName}.jpeg`);
            break;
        case "webp":
            cover = await import(`../assets/article-cover/${coverName}.webp`);
            break;
        case "avif":
            cover = await import(`../assets/article-cover/${coverName}.avif`);
            break;
    }
} catch (error) {
    console.error(`Article Card slug or cover "${slug}" is not found. This should be an unreachable error!`);
}
---

{
    !post ? (
        <Fragment />
    ) : (
        <a
            data-astro-prefetch="viewport"
            href={`/articles/${slug}`}
            class="card"
            transition:name={`article-title-container-${slug}`}
        >
            <div class="cover-container">
                <Picture src={cover.default} alt="img" class="cover" transition:name={`article-cover-${slug}`} />
            </div>
            <div class="content" transition:name={`article-title-content-${slug}`}>
                <h3>{post.title}</h3>
                {date && (
                    <p>
                        <span>{date.getDate()}</span>
                        <span>{date.toLocaleString("default", { month: "long" })}</span>
                        <span>{date.getFullYear()}</span>
                    </p>
                )}
            </div>
        </a>
    )
}

<style>
    .card {
        aspect-ratio: 1 / 1;
        width: calc(50% - var(--bank-gap) / 2);

        display: flex;
        flex-direction: column;
        text-decoration: none;
    }

    .cover-container {
        aspect-ratio: 1 / 1;
        width: 100%;
        height: 100%;
        background: rgba(0 0 0 / 0.1);
        overflow: hidden;
    }

    .cover {
        aspect-ratio: 1 / 1;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .content {
        padding: 0.5rem;
    }

    h3 {
        font-size: 1rem;
        margin-bottom: 0.5em;
    }

    p {
        font-size: 0.7rem;

        display: flex;
        gap: 0.25em;
    }
</style>
