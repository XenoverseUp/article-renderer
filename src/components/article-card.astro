---
import { Picture } from "astro:assets";

interface Props {
    slug: string;
    date?: Date;
}

const { slug, date } = Astro.props;

const post = await import(`../articles/content/${slug}.astro`);

const image = await (async () => {
    const coverImages = import.meta.glob<{ default: ImageMetadata }>("../articles/cover/*.{jpg,jpeg,png,webp,avif}");

    const coverEntry = Object.entries(coverImages).find(([path]) => path.endsWith(`/${post.cover}`));

    if (!coverEntry) throw new Error(`Article Layout Error: No cover image named "${post.cover}" found.`);

    return (await coverEntry[1]()).default;
})();
---

{
    !post ? (
        <Fragment />
    ) : (
        <a
            data-astro-prefetch="viewport"
            href={`/articles/${slug}`}
            class="card"
            transition:name={`article-title-container-${slug}`}
        >
            <div class="cover-container">
                <Picture src={image} alt={post.title} class="cover" />
            </div>
            <div class="content" transition:name={`article-title-content-${slug}`}>
                <h3>{post.title}</h3>
                {date && (
                    <time datetime={date.toISOString()}>
                        <span>{date.getDate()}</span>
                        <span>{date.toLocaleString("default", { month: "long" })}</span>
                        <span>{date.getFullYear()}</span>
                    </time>
                )}
            </div>
        </a>
    )
}

<style>
    .card {
        aspect-ratio: 1 / 1;
        width: calc(50% - var(--bank-gap) / 2);

        display: flex;
        flex-direction: column;
        text-decoration: none;
    }

    .cover-container {
        aspect-ratio: 1 / 1;
        width: 100%;
        background: rgba(0 0 0 / 0.1);
        overflow: hidden;
    }

    .cover {
        aspect-ratio: 1 / 1;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .content {
        padding: 0.5rem;
    }

    h3 {
        font-size: 1rem;
        margin-bottom: 0.5em;
    }

    time {
        font-size: 0.7rem;

        display: flex;
        gap: 0.25em;
    }
</style>
